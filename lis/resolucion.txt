comm := ... | tempAss (v;e) in comm -- ejecuto un comando 
-- v es una variable

comm := "tempAss(" var ";" intexp ") in" comm

-- escribir una regla T-Ass
-- identificar 
-- mirar al seq1 y seq2

(v,o) => n    (e,o) => n'  (c, [o | v:n']) ~> (c',o')
---------------------------------------------------------
(tempAss (v,e) in c, o) ~> (skip, [o' | v:n])


data Comm = TempAss Variable Intexp Comm

evalComm (TempAss var e c) = 
        let n = lookfor var s
            n' = evalIntexp e s
            s' = evalComm c (update var n' s)
        in evalComm Skip (update var n s')

-- el lookfor deberia tener un (Left error(variable no definida) | Right res)


-- LOOKFOR
comm = ... "for (" intexp ";" intexp ") do" comm

(e1,o) => n1    (e2,o) => n2
---------------------------------------
(for (e1;e2) do c, o) ~> (if n1 < n2 then c; for(n1;n2-1) do c else skip, o')

evalComm (For var1 var2 c) s = 
        let n1 = evalIntExp var1
            n2 = evalIntExp var2
        in if n2 > n1 then evalComm (Seq c (For (Const n1) (Const(n2-1)) c)) s
           then evalComm Skip s
